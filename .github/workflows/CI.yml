name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.10.10"
          - "1.11.0"
          - "1.12.0"
        os:
          - macOS-latest
        arch:
          - x64
    steps:
      # 1. Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up the specified Julia version
      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}

      # 3. Cache dependencies for faster builds
      - name: Cache Julia dependencies
        uses: julia-actions/cache@v2

      # 4. Install the package's dependencies
      - name: Install dependencies
        run: julia -e 'using Pkg; Pkg.instantiate()'

      # 5. Run the tests
      - name: Run tests
        run: julia -e 'using Pkg; Pkg.test()'
  docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    # This job only needs to run on one Julia version
    steps:
      # 1. Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up Julia (e.g., v1.10)
      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: "1.10"

      # 3. Cache dependencies
      - name: Cache Julia dependencies
        uses: julia-actions/cache@v2

      # 4. Install documentation dependencies
      #    This is the most critical step for an unregistered package.
      - name: Install documentation dependencies
        run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(path=".")  # Installs Bramble.jl from the current directory
            Pkg.instantiate()'

      # 5. Build and deploy the documentation
      #    The GITHUB_TOKEN is automatically provided by GitHub Actions.
      #    Documenter.jl will detect it's in a CI environment and use it.
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: julia --project=docs docs/make.jl
